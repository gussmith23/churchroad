; This file comes from an example permuter design given to us by Intel.

; wire declarations
; $0\dout[15:0]
(let v0 (Wire "v0" 16))
; $auto$rtlil.cc:2492:Or$13
(let v1 (Wire "v1" 1))
; $auto$rtlil.cc:2558:Mux$11
(let v2 (Wire "v2" 16))
; $auto$rtlil.cc:2558:Mux$9
(let v3 (Wire "v3" 16))
; $procmux$3_CMP
(let v4 (Wire "v4" 1))
; $procmux$4_CMP
(let v5 (Wire "v5" 1))
; $procmux$5_CMP
(let v6 (Wire "v6" 1))
; clk
(let v7 (Wire "v7" 1))
; control
(let v8 (Wire "v8" 2))
; din
(let v9 (Wire "v9" 16))
; dout
(let v10 (Wire "v10" 16))

; cells
(union v1 (Op2 (Or) v5 v4))
; { \din [11:8] \din [15:12] \din [3:0] \din [7:4] }
(let v11 (Op1 (Extract 7 4) v9))
(let v12 (Op1 (Extract 3 0) v9))
(let v13 (Op1 (Extract 15 12) v9))
(let v14 (Op1 (Extract 11 8) v9))
(let v15 (Op2 (Concat) v11 v12))
(let v16 (Op2 (Concat) v15 v13))
(let v17 (Op2 (Concat) v16 v14))
(union v2 (Op3 (Mux) v6 v9 v17))
(union v0 (Op3 (Mux) v1 v2 v3))
; { \din [7:0] \din [15:8] }
(let v18 (Op1 (Extract 15 8) v9))
(let v19 (Op1 (Extract 7 0) v9))
(let v20 (Op2 (Concat) v18 v19))
; { \din [3:0] \din [7:4] \din [11:8] \din [15:12] }
(let v21 (Op2 (Concat) v13 v14))
(let v22 (Op2 (Concat) v21 v11))
(let v23 (Op2 (Concat) v22 v12))
(union v3 (Op3 (Mux) v4 v20 v23))
; TODO: assuming 0 default for Reg
(union v10 (Op1 (Reg 0) v0))
; 2'11
(let v24 (Op0 (BV 3 2)))
(union v4 (Op2 (Eq) v8 v24))
; 2'10
(let v25 (Op0 (BV 2 2)))
(union v5 (Op2 (Eq) v8 v25))
; 1'1
(let v26 (Op0 (BV 1 1)))
; TODO not handling signedness
(let v27 (Op1 (ZeroExtend 2) v26))
(union v6 (Op2 (Eq) v8 v27))

; inputs
(let clk (Var "clk" 1))
(union v7 clk)
(let control (Var "control" 2))
(union v8 control)
(let din (Var "din" 16))
(union v9 din)

; outputs
(let dout v10)

; delete wire expressions
(delete (Wire "v0" 16))
(delete (Wire "v1" 1))
(delete (Wire "v2" 16))
(delete (Wire "v3" 16))
(delete (Wire "v4" 1))
(delete (Wire "v5" 1))
(delete (Wire "v6" 1))
(delete (Wire "v7" 1))
(delete (Wire "v8" 2))
(delete (Wire "v9" 16))
(delete (Wire "v10" 16))
