import lit.formats
import os
import shutil
import subprocess
import logging

env = os.environ.copy()

# If YOSYS environment variable isn't set, we'll use a default value.
if "YOSYS" not in env:

    # Check that `yosys` binary is actually available.
    if not shutil.which("yosys"):
        raise Exception(
            "YOSYS is not set, and yosys is not on the PATH. Please set YOSYS to the path to the `yosys` binary."
        )

    env["YOSYS"] = "yosys"

if "CHURCHROAD_DIR" not in env:
    raise Exception(
        "CHURCHROAD_DIR is not set. Please point CHURCHROAD_DIR to the root of the Churchroad repository."
    )

# Set up path to LLVM -- specifically so that we can use FileCheck.
# 1. If LLVM_CONFIG is set, uses that to find the bin directory of LLVM.
# 2. Else, uses FileCheck on the PATH, if there is one.
# 3. Else, uses llvm-config on the PATH to set the PATH to LLVM binaries.
# 4. Else, fail.
llvm_bindir = ""
if "LLVM_CONFIG" in env:
    llvm_bindir = (
        subprocess.check_output(
            [env["LLVM_CONFIG"], "--bindir"],
        )
        .decode("utf-8")
        .strip()
    )
elif shutil.which("FileCheck"):
    pass
elif shutil.which("llvm-config"):
    llvm_bindir = (
        subprocess.check_output(
            ["llvm-config", "--bindir"],
        )
        .decode("utf-8")
        .strip()
    )
else:
    raise Exception(
        "LLVM_CONFIG is not set, and FileCheck and llvm-config are not on the PATH. Please point LLVM_CONFIG to the llvm-config binary, or install LLVM and put its binary directory on your PATH."
    )

env["PATH"] = llvm_bindir + ":" + env["PATH"]

config.name = "Lakeroad backend tests"
# True so that we use external shell.
config.test_format = lit.formats.ShTest(True)
config.environment = env
config.suffixes = [".sv", ".ys"]
